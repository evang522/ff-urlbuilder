{"version":3,"sources":["components/atoms/Headline.tsx","components/atoms/QuantitySelector.tsx","Utilities/fetchProductInfo.ts","components/atoms/ProductInput.tsx","components/molecules/ProductInputList.tsx","Utilities/calculateUrl.ts","App.tsx","index.tsx"],"names":["Headline","react","style","this","props","text","React","QuantitySelector","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSelectChange","event","onChange","target","value","desiredIdCount","disabled","fetchProductInfo","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","id","apiUrl","rawResponse","product","rawEventOccurrenceResponse","eventOccurrence","rawStudioResponse","studio","wrap","_context","prev","next","fetch","sent","json","code","Error","abrupt","stop","_x","apply","arguments","ProductInput","handleTextInputChange","_product","idMember","length","setProductVerified","t0","verified","handleQuantityChange","setProductQuantity","border","borderRadius","fontSize","height","margin","textAlign","width","maxLength","productId","placeholder","color","productTitle","ProductInputList","generateIdList","idList","map","index","atoms_ProductInput","key","alignContent","display","flexDirection","flexWrap","calculateUrl","url","reduce","accumulator","push","forEach","concat","quantity","slice","App","state","handleProductSelectorInputChange","newArr","toConsumableArray","filter","idMemberInState","uuid","objectSpread","setState","sort","b","Number","handleProductCountChange","defaultProductArr","difference","i","Math","random","toString","status","name","discriminator","newIdList","className","atoms_Headline","atoms_QuantitySelector","molecules_ProductInputList","href","rel","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f7618995.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface IProps {\n  text: string;\n  style?: object;\n}\n\nclass Headline extends React.Component<IProps> {\n\n  public render() {\n    return (\n      <h1 style={this.props.style}>\n        {this.props.text}\n      </h1>\n    );\n  }\n}\n\nexport default Headline;","import * as React from 'react';\n\ninterface IProps {\n  onChange: (value: number) => void;\n  desiredIdCount: number;\n}\n\nclass QuantitySelector extends React.Component<IProps> {\n\n  constructor(props: IProps) {\n      super(props);\n  }\n\n  public render() {\n    return (\n        <div>\n            Wie viele verschiedene Produkte?\n            <select value={this.props.desiredIdCount} onChange={this.handleSelectChange}>\n                <option disabled={true} value={0}>0</option>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n                <option value={3}>3</option>\n                <option value={4}>4</option>\n                <option value={5}>5</option>\n                <option value={6}>6</option>\n                <option value={7}>7</option>\n                <option value={8}>8</option>\n                <option value={9}>9</option>\n                <option value={10}>10</option>\n            </select>\n        </div>\n    );\n  }\n\n  public handleSelectChange = (event: any) => {\n    this.props.onChange(event.target.value);\n  }\n}\n\nexport default QuantitySelector;","const baseProductApiUrl = 'https://www.v2.fitfox.de/api/product/';\nconst baseEventOccurrenceApiUrl = 'https://www.v2.fitfox.de/api/eventoccurrence/';\nconst baseStudioOccurrenceApiUrl = 'https://www.v2.fitfox.de/api/studio/';\n\nconst fetchProductInfo = async (id: string): Promise<any> => {\n    const apiUrl: string = baseProductApiUrl + id;\n    const rawResponse = await fetch(apiUrl);\n    const product = await rawResponse.json();\n\n    if (!product || product.code === 404) {\n        throw new Error('Product Not Found');\n    }\n\n    if (product.eventOccurrence) {\n        const rawEventOccurrenceResponse = await fetch(baseEventOccurrenceApiUrl + product.eventOccurrence.id);\n        const eventOccurrence = await rawEventOccurrenceResponse.json();\n        product.eventOccurrence = eventOccurrence;\n        return product;\n    } else {\n        const rawStudioResponse = await fetch(baseStudioOccurrenceApiUrl + product.studio.id);\n        const studio = await rawStudioResponse.json();\n        product.studio = studio;\n        return product;\n    }\n}\n\nexport default fetchProductInfo;","import * as React from 'react';\nimport {IIdMember} from '../../App';\nimport fetchProductInfo from '../../Utilities/fetchProductInfo';\n\ninterface IProps {\n    idMember: IIdMember;\n    onChange: (value: string, idMember: any) => void;\n    setProductVerified: (idMember: IIdMember, status: boolean, product?: any) => void;\n    setProductQuantity: (idMember: IIdMember, quantity: number) => void;\n}\n\nclass ProductInput extends React.Component<IProps> {\n\n  public render() {\n    return (\n        <div>\n            <input\n                style={{\n                  border: '2px dotted black',\n                  borderRadius: '4px',\n                  fontSize: '15px',\n                  height: '2rem',\n                  margin: '1rem',\n                  textAlign: 'center',\n                  width: '27rem',\n                }}\n                maxLength={36}\n                onChange={this.handleTextInputChange}\n                value={this.props.idMember.productId || ''}\n                placeholder=\"produkte id eingeben...\"\n            />\n            <label>Menge: </label>\n            <select  onChange={this.handleQuantityChange}>\n              <option value={1}>1</option>\n              <option value={2}>2</option>\n              <option value={3}>3</option>\n              <option value={4}>4</option>\n              <option value={5}>5</option>\n              <option value={6}>6</option>\n              <option value={7}>7</option>\n              <option value={8}>8</option>\n              <option value={9}>9</option>\n              <option value={10}>10</option>\n            </select>\n            {this.props.idMember.verified ? <div style={{color: 'green'}}> {'Verifiziert!  ' + this.props.idMember.productTitle } </div>: null}\n        </div>\n    );\n  }\n\n  public handleTextInputChange = async (event: any) => {\n    this.props.onChange(event.target.value, this.props.idMember);\n    if (event.target.value.length === 36) {\n      try {\n      const product = await fetchProductInfo(event.target.value);\n      this.props.setProductVerified(this.props.idMember, true, product)\n      } catch (e) {\n        this.props.setProductVerified(this.props.idMember, false)\n      }\n    } else {\n      if (this.props.idMember.verified) {\n        this.props.setProductVerified(this.props.idMember, false)\n      }\n    }\n  }\n\n  public handleQuantityChange = (event: any) => {\n    this.props.setProductQuantity(this.props.idMember, event.target.value)\n  }\n}\n\nexport default ProductInput;","import * as React from 'react';\nimport {IIdMember} from '../../App';\nimport ProductInput from '../atoms/ProductInput';\n\ninterface IProps {\n    idList: IIdMember[];\n    onChange: (value: string, idMember: IIdMember) => void;\n    setProductVerified: (idMember: IIdMember, status: boolean) => void;\n    setProductQuantity: (idMember: IIdMember, quantity: number) => void;\n}\n\nclass ProductInputList extends React.Component<IProps> {\n\n  public render() {\n    return (\n        <div style={{\n          alignContent: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          flexWrap: 'wrap',\n          margin: '0 auto',\n          textAlign: 'center'\n        }}>\n          {this.generateIdList()}\n        </div>\n    );\n  }\n\n  public generateIdList = () => {\n      return this.props.idList.map((idMember: IIdMember, index: number) => {\n        return (\n          <ProductInput\n            setProductVerified={this.props.setProductVerified}\n            onChange={this.props.onChange}\n            key={index}\n            idMember={idMember}\n            setProductQuantity={this.props.setProductQuantity}\n          />\n      )})\n  }\n\n}\n\nexport default ProductInputList;","import { IIdMember } from './../App';\nconst calculateUrl = (idList: IIdMember[]): string => {\n    let url: string = 'https://www.fitfox.de/checkout/?';\n    if (!idList.length) {\n        return '';\n    }\n\n    const filteredIdList = idList.reduce((accumulator: IIdMember[], idMember: IIdMember) => {\n        if (idMember.verified) {\n            accumulator.push(idMember);\n        }\n        return accumulator;\n    }, [])\n\n    filteredIdList.forEach((idMember: IIdMember, index: number) => {\n        if (idMember.verified) {\n            url += `products[${index}][id]=${idMember.productId}&products[${index}][quantity]=${idMember.quantity}&`\n        }\n    })\n\n    if (url[url.length - 1] === '&') {\n        url = url.slice(0, url.length - 1);\n    }\n    return url;\n}\n\nexport default calculateUrl;","import * as React from 'react';\nimport './App.css';\nimport Headline from './components/atoms/Headline';\nimport QuantitySelector from './components/atoms/QuantitySelector';\nimport ProductInputList from './components/molecules/ProductInputList';\nimport calculateUrl from './Utilities/calculateUrl';\n\n\ninterface IState {\n  desiredIdCount: number;\n  idList: IIdMember[];\n}\n\nexport interface IIdMember {\n  uuid: string;\n  productId: string | null;\n  quantity: number | null;\n  productTitle: string | null;\n  verified: boolean;\n}\n\nclass App extends React.Component {\n  public state: IState = {\n    desiredIdCount: 0,\n    idList: [],\n  }\n\n  public render() {\n    return (\n      <div className=\"App\">\n        <Headline text=\"Fitfox Checkout URL Builder\" />\n        <QuantitySelector desiredIdCount={this.state.desiredIdCount} onChange={this.handleProductCountChange}/>\n        <ProductInputList\n          idList={this.state.idList}\n          onChange={this.handleProductSelectorInputChange}\n          setProductVerified={this.setProductVerified}\n          setProductQuantity={this.setProductQuantity}\n        />\n        <br/>\n        <br/>\n        <div style={{width: '80%', margin: '0 auto'}}>\n        <a href={calculateUrl(this.state.idList)} target=\"_blank\" rel=\"noreferrer\">\n          {calculateUrl(this.state.idList)}\n        </a>\n        </div>\n      </div>\n    );\n  }\n\n  public handleProductSelectorInputChange = (value: string, idMember: IIdMember) => {\n    const newArr = [...this.state.idList.filter((idMemberInState: IIdMember) => idMemberInState.uuid !== idMember.uuid ),\n      {...idMember, productId: value}];\n    this.setState({\n      idList: [\n        ...newArr.sort((a: IIdMember,b: IIdMember) => (Number(a.uuid) - Number(b.uuid))),\n      ]\n    })\n  }\n\n  public handleProductCountChange = (value: number): void => {\n    const makeDefaultIdMember = (): IIdMember => ({\n      productId: null,\n      productTitle: null,\n      quantity: 1,\n      uuid: (Math.random() * 1000000).toString(),\n      verified: false,\n    });\n\n    const defaultProductArr: any[] = [];\n    if (this.state.idList.length < value) {\n      const difference = value - this.state.idList.length;\n      for (let i = 0; i < difference; i++) {\n        defaultProductArr.push({...makeDefaultIdMember()})\n      }\n    }\n    this.setState({\n      desiredIdCount: Number(value),\n      idList: [\n        ...this.state.idList,\n        ...defaultProductArr,\n      ].slice(0, value).sort((a: IIdMember,b: IIdMember) => (Number(a.uuid) - Number(b.uuid))),\n    })\n  }\n\n  public setProductVerified = (idMember: IIdMember, status: boolean, product?: any): void => {\n    const newArr = [...this.state.idList.filter((idMemberInState: IIdMember) => idMemberInState.uuid !== idMember.uuid ),\n      {\n        ...idMember,\n        verified: status,\n        ...(product && {productTitle:`${product.eventOccurrence && product.eventOccurrence.name || product.studio.name} - ${product.name} - Product Type:  ${product.discriminator}` }) \n      }];\n    this.setState({\n      idList: [\n      ...newArr.sort((a: IIdMember,b: IIdMember) => (Number(a.uuid) - Number(b.uuid))),\n      ],\n    })\n  }\n\n  public setProductQuantity = (idMember: IIdMember, quantity: number): void => {\n    const newIdList = [...this.state.idList.filter((idMemberInState: IIdMember) => idMemberInState.uuid !== idMember.uuid ),\n      {...idMember, quantity}];\n      this.setState({\n        idList: [\n          ...newIdList.sort((a: IIdMember,b: IIdMember) => (Number(a.uuid) - Number(b.uuid))),\n        ]\n      })\n  }\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\n"],"sourceRoot":""}